{"ast":null,"code":"var _jsxFileName = \"E:\\\\react_new\\\\myapp\\\\src\\\\Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Timer = () => {\n  _s();\n  const [time, setTime] = useState(0);\n  const [intervalId, setIntervalId] = useState(null);\n  const startTimer = () => {\n    if (!intervalId) {\n      const id = setInterval(() => {\n        setTime(prevTime => prevTime + 1);\n      }, 1000);\n      setIntervalId(id);\n    }\n  };\n  const stopTimer = () => {\n    if (intervalId) {\n      clearInterval(intervalId);\n      setIntervalId(null);\n    }\n  };\n  const resetTimer = () => {\n    stopTimer(); // Ensures interval is cleared before resetting\n    setTime(0);\n  };\n\n  // Format time as HH:MM:SS\n  const formatTime = seconds => {\n    const hrs = String(Math.floor(seconds / 3600)).padStart(2, \"0\");\n    const mins = String(Math.floor(seconds % 3600 / 60)).padStart(2, \"0\");\n    const secs = String(seconds % 60).padStart(2, \"0\");\n    return `${hrs}:${mins}:${secs}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center p-5 border rounded-lg shadow-lg w-64 bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-3\",\n      children: \"Stopwatch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-xl font-mono bg-white px-4 py-2 rounded-md shadow\",\n      children: formatTime(time)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startTimer,\n        className: \"bg-green-500 text-white px-3 py-1 rounded\",\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopTimer,\n        className: \"bg-red-500 text-white px-3 py-1 rounded\",\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetTimer,\n        className: \"bg-blue-500 text-white px-3 py-1 rounded\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Timer, \"rj8vAa6B1K4Rq6wzJ5nh/hbARJk=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Timer","_s","time","setTime","intervalId","setIntervalId","startTimer","id","setInterval","prevTime","stopTimer","clearInterval","resetTimer","formatTime","seconds","hrs","String","Math","floor","padStart","mins","secs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/react_new/myapp/src/Timer.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Timer = () => {\r\n  const [time, setTime] = useState(0);\r\n  const [intervalId, setIntervalId] = useState(null);\r\n\r\n  const startTimer = () => {\r\n    if (!intervalId) {\r\n      const id = setInterval(() => {\r\n        setTime((prevTime) => prevTime + 1);\r\n      }, 1000);\r\n      setIntervalId(id);\r\n    }\r\n  };\r\n\r\n  const stopTimer = () => {\r\n    if (intervalId) {\r\n      clearInterval(intervalId);\r\n      setIntervalId(null);\r\n    }\r\n  };\r\n\r\n  const resetTimer = () => {\r\n    stopTimer(); // Ensures interval is cleared before resetting\r\n    setTime(0);\r\n  };\r\n\r\n  // Format time as HH:MM:SS\r\n  const formatTime = (seconds) => {\r\n    const hrs = String(Math.floor(seconds / 3600)).padStart(2, \"0\");\r\n    const mins = String(Math.floor((seconds % 3600) / 60)).padStart(2, \"0\");\r\n    const secs = String(seconds % 60).padStart(2, \"0\");\r\n    return `${hrs}:${mins}:${secs}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center p-5 border rounded-lg shadow-lg w-64 bg-gray-100\">\r\n      <h1 className=\"text-2xl font-bold mb-3\">Stopwatch</h1>\r\n      <p className=\"text-xl font-mono bg-white px-4 py-2 rounded-md shadow\">{formatTime(time)}</p>\r\n      <div className=\"mt-4 flex gap-2\">\r\n        <button onClick={startTimer} className=\"bg-green-500 text-white px-3 py-1 rounded\">Start</button>\r\n        <button onClick={stopTimer} className=\"bg-red-500 text-white px-3 py-1 rounded\">Stop</button>\r\n        <button onClick={resetTimer} className=\"bg-blue-500 text-white px-3 py-1 rounded\">Reset</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}